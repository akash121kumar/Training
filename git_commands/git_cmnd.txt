Git Commands


1.To create a repository :
	*Goto the directory you want to create repository
	* $git init

2.To clone an existing repository:
	$git clone url
	*Paste the url from github repository

3.Status Update :Gives the status of repository if any changes are made.:
	$git status


To create a user in Git :
 *To create a user name :
	$git config --global user.name "Akash"
 *To set email id :
	$git config --global user.email "akashkumar121.ak.ak@gmail.com"
 *To check the details of a user 
	$git --global --list
 *To add a github repository:
	$git remote add origin url
 * To add a directory or file to git :
	$git add directory/filename : It will add a file to staging Index.

To commit in git :
 	$git commit -m ""

To Push in git :
	$git push origin master

To retrieve the history of commits:
	$git log :			Gives all the information about comit .
	$git log --oneline :		Gives the history of commit in singleline.
	$git log --stat :		Displays the file that have been modified.
	$git log -p : 			Shows the actual changes that have been made.
	$git show :			It will show some specific commit.

$ git add . : Stages all the remaining file.
$ git diff  : Used to see changes that have been made but haven't been committed, yet.
 .gitignore file: The files you want to have but dont want to commit.


TAGGING IN GIT :

Git tag command is used to add a marker on a specific commit. The tag does not move around as new commits are added.
		$git tag -a v1.0

A git tag can be deleted :
		$git tag -d v1.0

GIT BRANCH :

A branch is used to do development or make a fix to the project that won't affect the project (since the changes are made on a branch)
$ git branch 	:	It will show all the branches
$ git branch sidebar : 	It will create a new branch sidebar
$ git checkout sidebar:	It will change the branch to sidebar 
$ git branch -d sidebar:It will delete the branch sidebar

MERGING BRANCH :

Combining branches together is called merging.

$git merge <name of branch to merge in >

		There are two types of merges:

			1.Fast-forward merge â€“ the branch being merged in must be ahead of the checked out branch. The checked out branch's 				  pointer will just be moved forward to point to the same commit as the other branch.

			2.The regular type of merge:
				(i)two divergent branches are combined
				(ii)a merge commit is created



	



 
